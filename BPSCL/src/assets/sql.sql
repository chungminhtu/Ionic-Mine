CREATE TABLE IF NOT EXISTS "android_metadata" (
	"locale"	TEXT
);
CREATE TABLE IF NOT EXISTS "mu_SessionPeriod" (
	"sessionPeriodId"	int NOT NULL,
	"sessionTypeId"	int NOT NULL,
	"sessionPeriodName"	varchar(200) NOT NULL,
	"sessionTime"	varchar(50) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("sessionPeriodId")
);
CREATE TABLE IF NOT EXISTS "mu_SessionType" (
	"sessionTypeId"	int NOT NULL,
	"sessionTypeName"	varchar(200) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("sessionTypeId")
);
CREATE TABLE IF NOT EXISTS "di_CurrentStock" (
	"itemId"	int NOT NULL,
	"brandName"	varchar(100) NOT NULL,
	"batchNo"	varchar(100) NOT NULL,
	"expiryDate"	datetime NOT NULL,
	"currentQuantity"	int NOT NULL,
	"itemType"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("itemType") REFERENCES "mi_ItemType"("itemTypeId"),
	FOREIGN KEY("itemId") REFERENCES "mi_Item"("itemId"),
	PRIMARY KEY("itemId","brandName","batchNo","deviceId","vanId")
);
CREATE TABLE IF NOT EXISTS "di_Transaction" (
	"transactionId"	int NOT NULL,
	"itemId"	int NOT NULL,
	"brandName"	varchar(100) NOT NULL,
	"batchNo"	varchar(100) NOT NULL,
	"expiryDate"	datetime NOT NULL,
	"transactionQuantity"	int NOT NULL,
	"transactionTypeId"	int NOT NULL,
	"newCurrentQuantity"	int NOT NULL,
	"itemTypeId"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("itemTypeId") REFERENCES "mi_ItemType"("itemTypeId"),
	FOREIGN KEY("transactionTypeId") REFERENCES "mi_TransactionTyep"("transactionTypeId"),
	FOREIGN KEY("itemId") REFERENCES "mi_Item"("itemId"),
	PRIMARY KEY("transactionId","deviceId","vanId")
);
CREATE TABLE IF NOT EXISTS "mi_Item" (
	"itemId"	int NOT NULL,
	"category"	varchar(100) NOT NULL,
	"genericName"	varchar(200) NOT NULL,
	"formId"	int NOT NULL,
	"strengthId"	int NOT NULL,
	"itemType"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("itemType") REFERENCES "mi_ItemType"("itemTypeId"),
	FOREIGN KEY("strengthId") REFERENCES "mi_Strength"("strengthId"),
	FOREIGN KEY("formId") REFERENCES "mi_Form"("formId"),
	PRIMARY KEY("itemId")
);
CREATE TABLE IF NOT EXISTS "mi_Form" (
	"formId"	int NOT NULL,
	"formName"	varchar(200) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("formId")
);
CREATE TABLE IF NOT EXISTS "mi_Strength" (
	"strengthId"	int NOT NULL,
	"description"	varchar(200) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("strengthId")
);
CREATE TABLE IF NOT EXISTS "mi_Dosage" (
	"dosageId"	int NOT NULL,
	"dosageName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("dosageId")
);
CREATE TABLE IF NOT EXISTS "mi_Route" (
	"routeId"	int NOT NULL,
	"routeName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("routeId")
);
CREATE TABLE IF NOT EXISTS "mi_Interval" (
	"intervalId"	int NOT NULL,
	"intervalName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("intervalId")
);
CREATE TABLE IF NOT EXISTS "mi_Instruction" (
	"instructionId"	int NOT NULL,
	"instructionName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("instructionId")
);
CREATE TABLE IF NOT EXISTS "mi_Duration" (
	"durationId"	int NOT NULL,
	"durationName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("durationId")
);
CREATE TABLE IF NOT EXISTS "mi_ItemType" (
	"itemTypeId"	int NOT NULL,
	"itemTypeName"	varchar(100) NOT NULL,
	"description"	varchar(200),
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("itemTypeId")
);
CREATE TABLE IF NOT EXISTS "mi_TransactionType" (
	"transactionTypeid"	int NOT NULL,
	"transactionType"	varchar(200) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("transactionTypeId")
);
CREATE TABLE IF NOT EXISTS "mu_Role" (
	"roleId"	int NOT NULL,
	"rolename"	varchar(100) NOT NULL,
	"hasLogin"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("hasLogin") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("roleId")
);
CREATE TABLE IF NOT EXISTS "du_User" (
	"userId"	INTEGER,
	"firstName"	varchar(100) NOT NULL,
	"lastName"	varchar(100) NOT NULL,
	"userName"	varchar(100) NOT NULL,
	"password"	varchar(100) NOT NULL,
	"genderId"	int,
	"dob"	datetime,
	"fatherName"	varchar(100),
	"phone"	varchar(100),
	"address"	varchar(200),
	"email"	varchar(100),
	"age"	int,
	"ageTypeId"	int,
	"doj"	datetime,
	"roleId"	int NOT NULL,
	"userImageUrl"	varchar(200),
	"isActive"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"insertedBy"	int,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("vanid") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("roleId") REFERENCES "mu_Role"("roleId"),
	FOREIGN KEY("ageTypeId") REFERENCES "mp_AgeUnit"("ageUnitId"),
	FOREIGN KEY("genderId") REFERENCES "mp_Gender"("genderId"),
	PRIMARY KEY("userId" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "du_Attendance" (
	"attendanceId"	INT NOT NULL,
	"userId"	int NOT NULL,
	"sessionPeriodId"	int NOT NULL,
	"sessionTypeId"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"sessionStart"	datetime DEFAULT NULL,
	"sessionEnd"	datetime DEFAULT NULL,
	FOREIGN KEY("vanid") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	PRIMARY KEY("attendanceId" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "dp_Registration" (
	"patientId"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"routeVillageId"	int NOT NULL,
	"servicePointId"	int NOT NULL,
	"compoundPatientId"	varchar(200) NOT NULL,
	"registrationDate"	datetime NOT NULL,
	"name"	varchar(200) NOT NULL,
	"surname"	varchar(200) NOT NULL,
	"genderId"	int NOT NULL,
	"dob"	datetime NOT NULL,
	"communityId"	int NOT NULL,
	"religionId"	int NOT NULL,
	"fatherName"	varchar(200),
	"spouseName"	varchar(200),
	"motherName"	varchar(200),
	"aadharNo"	varchar(100),
	"mctsId"	varchar(100),
	"villageId"	int NOT NULL,
	"mandalId"	int NOT NULL,
	"districtId"	int NOT NULL,
	"stateId"	int NOT NULL,
	"imageUrl"	Varchar(100) DEFAULT null,
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	"imageUploadStatus"	Varchar(200) DEFAULT 0,
	"uploadstatus"	bit DEFAULT 1,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("stateId") REFERENCES "m_State"("stateId"),
	FOREIGN KEY("districtId") REFERENCES "m_District"("districtId"),
	FOREIGN KEY("mandalId") REFERENCES "m_Mandal"("mandalId"),
	FOREIGN KEY("villageId") REFERENCES "m_Village"("villageId"),
	FOREIGN KEY("religionId") REFERENCES "mp_Religion"("religionId"),
	FOREIGN KEY("communityId") REFERENCES "mp_Community"("communityId"),
	FOREIGN KEY("genderId") REFERENCES "mp_Gender"("genderId"),
	FOREIGN KEY("servicePointId") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("routeVillageId") REFERENCES "m_Village"("villageId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	PRIMARY KEY("patientId","deviceId","vanId","routeVillageId","servicePointId","compoundPatientId")
);
CREATE TABLE IF NOT EXISTS "dp_Visit" (
	"patientId"	int NOT NULL,
	"visitId"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"routeVillageId"	int NOT NULL,
	"servicePointId"	int NOT NULL,
	"compoundPatientId"	varchar(200) NOT NULL,
	"visitCount"	int NOT NULL,
	"visitDate"	datetime NOT NULL,
	"age"	int NOT NULL,
	"ageTypeId"	int NOT NULL,
	"ageGroupId"	int NOT NULL,
	"contactNo"	varchar(100),
	"familyContactNo"	varchar(100),
	"economicStatusId"	int NOT NULL,
	"educationStatusId"	int NOT NULL,
	"maritalStatusId"	int NOT NULL,
	"occupationStatusId"	int NOT NULL,
	"serviceProvidedId"	int NOT NULL,
	"pregnancyStatus"	int NOT NULL,
	"benTypeId"	int DEFAULT NULL,
	"noOfFamilyNumbers"	int NOT NULL,
	"isHandicaped"	int NOT NULL,
	"provisonalDiagnosis"	varchar(100) DEFAULT 'N/A',
	"impClinicalFindings"	varchar(100) DEFAULT 'N/A',
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	"uploadstatus"	bit DEFAULT 1,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("serviceProvidedId") REFERENCES "mp_ServiceProvided"("serviceProvidedId"),
	FOREIGN KEY("occupationStatusId") REFERENCES "mp_OccupationStatus"("occupationStatusId"),
	FOREIGN KEY("maritalStatusId") REFERENCES "mp_MaritalStatus"("maritalStatusId"),
	FOREIGN KEY("educationStatusId") REFERENCES "mp_EducationStatus"("educationStatusId"),
	FOREIGN KEY("economicStatusId") REFERENCES "mp_EconomicStatus"("economicStatusId"),
	FOREIGN KEY("ageGroupId") REFERENCES "mp_AgeCategory"("ageCategoryId"),
	FOREIGN KEY("ageTypeId") REFERENCES "mp_AgeUnit"("ageUnitId"),
	FOREIGN KEY("servicePointId") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("routeVillageId") REFERENCES "m_Village"("villageId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("patientId") REFERENCES "dp_Registration"("patientId"),
	PRIMARY KEY("patientId","visitId","deviceId","vanId","routeVillageId","servicePointId","compoundPatientId")
);
CREATE TABLE IF NOT EXISTS "dp_Vitals" (
	"patientId"	int NOT NULL,
	"visitId"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"routeVillageId"	int NOT NULL,
	"servicePointId"	int NOT NULL,
	"compoundPatientId"	varchar(200) NOT NULL,
	"visitCount"	int NOT NULL,
	"height"	float NOT NULL,
	"weight"	float NOT NULL,
	"bmi"	float NOT NULL,
	"pulseRate"	int,
	"temperature"	float,
	"respiratoryRate"	int,
	"bpSystolic"	int,
	"bpDiastolic"	int,
	"doctorBpSystolic"	int,
	"doctorBpDiastolic"	int,
	"muac"	float,
	"hc"	float,
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	"uploadstatus"	bit DEFAULT 1,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("servicePointId") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("routeVillageId") REFERENCES "m_Village"("villageId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("visitId") REFERENCES "dp_Visit"("visitId"),
	FOREIGN KEY("patientId") REFERENCES "dp_Registration"("patientId"),
	PRIMARY KEY("patientId","visitId","deviceId","vanId","routeVillageId","servicePointId","compoundPatientId")
);
CREATE TABLE IF NOT EXISTS "dp_Referral" (
	"patientId"	int NOT NULL,
	"visitId"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"routeVillageId"	int NOT NULL,
	"servicePointId"	int NOT NULL,
	"compoundPatientId"	varchar(200) NOT NULL,
	"visitCount"	int NOT NULL,
	"referralTypeId"	int NOT NULL,
	"otherPhc"	varchar(100),
	"remarks"	varchar(1000),
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	"uploadstatus"	bit DEFAULT 1,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("referralTypeId") REFERENCES "mp_ReferralType"("referralTypeId"),
	FOREIGN KEY("servicePointId") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("routeVillageId") REFERENCES "m_Village"("villageId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("visitId") REFERENCES "dp_Visit"("visitId"),
	FOREIGN KEY("patientId") REFERENCES "dp_Registration"("patientId"),
	PRIMARY KEY("patientId","visitId","deviceId","vanId","routeVillageId","servicePointId","compoundPatientId")
);
CREATE TABLE IF NOT EXISTS "dp_LabTest" (
	"patientId"	int NOT NULL,
	"visitId"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"routeVillageId"	int NOT NULL,
	"servicePointId"	int NOT NULL,
	"compoundPatientId"	varchar(200) NOT NULL,
	"visitCount"	int NOT NULL,
	"labTestId"	int NOT NULL,
	"labTestResult"	varchar(100),
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	"uploadstatus"	bit DEFAULT 1,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("labTestId") REFERENCES "mp_LabTest"("labTestId"),
	FOREIGN KEY("servicePointId") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("routeVillageId") REFERENCES "m_Village"("villageId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("visitId") REFERENCES "dp_Visit"("visitId"),
	FOREIGN KEY("patientId") REFERENCES "dp_Registration"("patientId"),
	PRIMARY KEY("patientId","visitId","deviceId","vanId","routeVillageId","servicePointId","compoundPatientId","labTestId")
);
CREATE TABLE IF NOT EXISTS "dp_ItemDispensation" (
	"patientId"	int NOT NULL,
	"visitId"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"routeVillageId"	int NOT NULL,
	"servicePointId"	int NOT NULL,
	"compoundPatientId"	varchar(200) NOT NULL,
	"visitCount"	int NOT NULL,
	"itemId"	int NOT NULL,
	"itemTypeId"	int NOT NULL,
	"batchNo"	varchar(100) NOT NULL,
	"brandName"	varchar(100),
	"expiryDate"	datetime NOT NULL,
	"duration"	varchar(100),
	"quantityGiven"	int NOT NULL,
	"quantityNeeded"	int NOT NULL,
	"dosage"	varchar(100) DEFAULT NULL,
	"remarks"	varchar(500) DEFAULT NULL,
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL,
	"uploadstatus"	bit DEFAULT 1,
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("dosage") REFERENCES "mi_Dosage"("dosageId"),
	FOREIGN KEY("itemTypeId") REFERENCES "mi_ItemType"("itemTypeId"),
	FOREIGN KEY("itemId") REFERENCES "mi_Item"("itemId"),
	FOREIGN KEY("servicePointId") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("routeVillageId") REFERENCES "m_Village"("villageId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("visitId") REFERENCES "dp_Visit"("visitId"),
	FOREIGN KEY("patientId") REFERENCES "dp_Registration"("patientId"),
	PRIMARY KEY("patientId","visitId","deviceId","vanId","routeVillageId","servicePointId","compoundPatientId","itemId")
);
CREATE TABLE IF NOT EXISTS "mv_Van" (
	"vanId"	int NOT NULL,
	"vanCode"	varchar(100) NOT NULL,
	"registrationNo"	varchar(100) NOT NULL,
	"parkingPlaceId"	int NOT NULL,
	"mandalId"	int NOT NULL,
	"districtID"	int NOT NULL,
	"stateId"	int NOT NULL,
	"villageId"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("stateId") REFERENCES "m_State"("stateId"),
	FOREIGN KEY("districtId") REFERENCES "m_District"("districtId"),
	FOREIGN KEY("mandalId") REFERENCES "m_Mandal"("mandalId"),
	FOREIGN KEY("parkingPlaceId") REFERENCES "mv_ParkingPlace"("parkingPlaceId"),
	PRIMARY KEY("vanId")
);
CREATE TABLE IF NOT EXISTS "mv_Device" (
	"deviceId"	int NOT NULL,
	"deviceUniqueId"	varchar(100) NOT NULL UNIQUE,
	"isApproved"	int NOT NULL,
	"vanId"	int NOT NULL,
	"deviceModel"	varchar(200) NOT NULL,
	"tabServerIP"	varchar(200) NOT NULL,
	"serverIP"	varchar(200) NOT NULL,
	"gcmToken"	VARCHAR(200) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("isApproved") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("deviceId")
);
CREATE TABLE IF NOT EXISTS "mv_ServicePoint" (
	"servicePointId"	int NOT NULL,
	"servicePointCode"	varchar(100) NOT NULL,
	"servicePointName"	varchar(100) NOT NULL,
	"villageId"	int NOT NULL,
	"mandalId"	int NOT NULL,
	"districtId"	int NOT NULL,
	"stateId"	int NOT NULL,
	"weekDay"	varchar(100),
	"weekNo"	int,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("stateId") REFERENCES "m_State"("stateId"),
	FOREIGN KEY("districtId") REFERENCES "m_District"("districtId"),
	FOREIGN KEY("mandalId") REFERENCES "m_Mandal"("mandalId"),
	FOREIGN KEY("villageId") REFERENCES "m_Village"("villageId"),
	PRIMARY KEY("servicePointId")
);
CREATE TABLE IF NOT EXISTS "mv_ParkingPlace" (
	"parkingPlaceId"	int NOT NULL,
	"parkingPlaceName"	varchar(100) NOT NULL,
	"parkingPlaceAddress"	varchar(100),
	"districtId"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("districtId") REFERENCES "m_District"("districtId"),
	PRIMARY KEY("parkingPlaceId")
);
CREATE TABLE IF NOT EXISTS "mv_Route" (
	"routeId"	int(100) NOT NULL,
	"routeName"	varchar(100) NOT NULL,
	"vanId"	int NOT NULL,
	"districtId"	int NOT NULL,
	"parkingPlaceId"	int NOT NULL,
	"morningServicePoint"	int NOT NULL,
	"eveningServicePoint"	int NOT NULL,
	"weekDay"	int NOT NULL,
	"weekNo"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("eveningServicePoint") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("morningServicePoint") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("parkingPlaceId") REFERENCES "mv_ParkingPlace"("parkingPlaceId"),
	FOREIGN KEY("districtId") REFERENCES "m_District"("districtId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	PRIMARY KEY("routeId")
);
CREATE TABLE IF NOT EXISTS "mv_VehicleRoute" (
	"vehicleRouteId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"routeId"	int NOT NULL,
	"weekDay"	varchar(100) NOT NULL,
	"weekNo"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("routeId") REFERENCES "mv_Route"("routeId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	PRIMARY KEY("vehicleRouteId")
);
CREATE TABLE IF NOT EXISTS "ds_CountInfo" (
	"parameterName"	varchar(100) NOT NULL,
	"parameterValue"	int NOT NULL,
	"servicePoint"	int NOT NULL,
	"vanId"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updateDate"	datetime NOT NULL,
	FOREIGN KEY("vanid") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("servicePoint") REFERENCES "mv_ServicePoint"("servicePointId"),
	PRIMARY KEY("parameterName","servicePoint","vanId")
);
CREATE TABLE IF NOT EXISTS "ds_VersionControl" (
	"versionInfoId"	int NOT NULL,
	"applicationVersion"	varchar(100) NOT NULL,
	"dbVersion"	varchar(100) NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	FOREIGN KEY("vanid") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	PRIMARY KEY("versionInfoId","deviceId","vanId")
);
CREATE TABLE IF NOT EXISTS "ds_UploadData" (
	"uploadId"	INTEGER,
	"query"	text NOT NULL,
	"userId"	int NOT NULL,
	"tableName"	varchar(200) NOT NULL,
	"operationType"	varchar(200) NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"uploadStatus"	bit DEFAULT 1,
	"insertedDate"	datetime NOT NULL,
	FOREIGN KEY("vanid") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("userId") REFERENCES "du_User"("userId"),
	PRIMARY KEY("uploadId" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "ds_DownloadData" (
	"downloadId"	int NOT NULL,
	"query"	text NOT NULL,
	"userId"	int NOT NULL,
	"tableName"	varchar(200) NOT NULL,
	"operationType"	varchar(200) NOT NULL,
	"downloadCompleted"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("vanid") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("userId") REFERENCES "du_User"("userId"),
	PRIMARY KEY("downloadId","deviceId","vanId")
);
CREATE TABLE IF NOT EXISTS "ds_TableMetaData" (
	"tableName"	varchar(200) NOT NULL,
	"totalCount"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	PRIMARY KEY("tableName")
);
CREATE TABLE IF NOT EXISTS "ds_ExceptionLog" (
	"exceptionId"	INTEGER,
	"exception"	varchar(200) DEFAULT NULL,
	"className"	varchar(200) NOT NULL,
	"methodName"	varchar(200) NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("vanid") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	PRIMARY KEY("exceptionId" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "dp_ProvisionalDiagnosis" (
	"patientId"	int NOT NULL,
	"visitId"	INTEGER NOT NULL,
	"deviceId"	INTEGER NOT NULL,
	"vanId"	INTEGER NOT NULL,
	"routeVillageId"	INTEGER NOT NULL,
	"servicePointId"	INTEGER NOT NULL,
	"compoundPatientId"	varchar(200) NOT NULL,
	"visitCount"	INTEGER NOT NULL,
	"provisionalDiagnosisId"	int NOT NULL,
	"provisionalDiagnosisOther"	varchar(200) DEFAULT NULL,
	"remarks"	varchar(200),
	"impClinicalFindings"	varchar(200),
	"insertedBy"	INTEGER NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	INTEGER NOT NULL,
	"updatedDate"	datetime NOT NULL,
	"uploadstatus"	bit DEFAULT 1,
	FOREIGN KEY("provisionalDiagnosisId") REFERENCES "mp_ProvisionalDiagnosis"("provisionalDiagnosisId"),
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("servicePointId") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("routeVillageId") REFERENCES "m_Village"("villageId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("visitId") REFERENCES "dp_Visit"("visitId"),
	FOREIGN KEY("patientId") REFERENCES "dp_Registration"("patientId"),
	PRIMARY KEY("provisionalDiagnosisId","patientId","visitId","deviceId","vanId","routeVillageId","servicePointId","compoundPatientId")
);
CREATE TABLE IF NOT EXISTS "m_State" (
	"stateId"	int NOT NULL,
	"stateName"	varchar(200) NOT NULL,
	"stateShortName"	varchar(100),
	"stateCode"	varchar(100),
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("stateId")
);
CREATE TABLE IF NOT EXISTS "m_District" (
	"districtId"	int NOT NULL,
	"districtName"	varchar(200) NOT NULL,
	"districtShortName"	varchar(100),
	"districtCode"	varchar(100),
	"stateId"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("stateId") REFERENCES "m_State"("stateId"),
	PRIMARY KEY("districtId")
);
CREATE TABLE IF NOT EXISTS "m_Mandal" (
	"mandalId"	int NOT NULL,
	"mandalName"	varchar(200) NOT NULL,
	"mandalShortName"	varchar(100),
	"mandalCode"	varchar(100),
	"districtId"	int NOT NULL,
	"stateId"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("stateId") REFERENCES "m_State"("stateId"),
	FOREIGN KEY("districtId") REFERENCES "m_District"("districtId"),
	PRIMARY KEY("mandalId")
);
CREATE TABLE IF NOT EXISTS "m_Village" (
	"villageId"	int NOT NULL,
	"villageName"	varchar(200) NOT NULL,
	"villageCode"	varchar(100),
	"population"	int,
	"latitude"	varchar(100),
	"longitude"	varchar(100),
	"mandalId"	int NOT NULL,
	"districtId"	int NOT NULL,
	"stateId"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("stateId") REFERENCES "m_State"("stateId"),
	FOREIGN KEY("districtId") REFERENCES "m_District"("districtId"),
	FOREIGN KEY("mandalId") REFERENCES "m_Mandal"("mandalId"),
	PRIMARY KEY("villageId")
);
CREATE TABLE IF NOT EXISTS "mp_Gender" (
	"genderId"	int NOT NULL,
	"gender"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("genderId")
);
CREATE TABLE IF NOT EXISTS "mp_Religion" (
	"religionId"	int NOT NULL,
	"religionName"	varchar(200) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("religionId")
);
CREATE TABLE IF NOT EXISTS "mp_Community" (
	"communityId"	int NOT NULL,
	"communityName"	varchar(100) NOT NULL,
	"communityShortName"	varchar(100),
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("communityId")
);
CREATE TABLE IF NOT EXISTS "mp_AgeCategory" (
	"ageCategoryId"	int NOT NULL,
	"ageCategoryName"	varchar(100) NOT NULL,
	"description"	varchar(200),
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("ageCategoryId")
);
CREATE TABLE IF NOT EXISTS "mp_AgeUnit" (
	"ageUnitId"	int NOT NULL,
	"ageUnitName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("ageUnitId")
);
CREATE TABLE IF NOT EXISTS "mp_EconomicStatus" (
	"economicStatusId"	int NOT NULL,
	"economicStatusName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("economicStatusId")
);
CREATE TABLE IF NOT EXISTS "mp_EducationStatus" (
	"educationStatusId"	int NOT NULL,
	"educationStatusName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("educationStatusId")
);
CREATE TABLE IF NOT EXISTS "mp_MaritalStatus" (
	"maritalStatusId"	int NOT NULL,
	"maritalStatusName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("maritalStatusId")
);
CREATE TABLE IF NOT EXISTS "mp_SocialStatus" (
	"socialStatusId"	int NOT NULL,
	"socialStatusName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("socialStatusId")
);
CREATE TABLE IF NOT EXISTS "mp_ReferralType" (
	"referralTypeId"	int NOT NULL,
	"referralTypeName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("referralTypeId")
);
CREATE TABLE IF NOT EXISTS "mp_ChronicDisease" (
	"chronicDiseaseId"	int NOT NULL,
	"chronicDiseaseName"	varchar(200) NOT NULL,
	"chronicDiseaseCode"	varchar(100),
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("chronicDiseaseId")
);
CREATE TABLE IF NOT EXISTS "mp_LabTest" (
	"labTestId"	int NOT NULL,
	"labTestName"	varchar(100) NOT NULL,
	"specimenId"	int,
	"normalValue"	varchar(100),
	"validValues"	varchar(100),
	"units"	varchar(100),
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("labTestId")
);
CREATE TABLE IF NOT EXISTS "mp_ServiceProvided" (
	"serviceProvidedId"	int NOT NULL,
	"serviceProvidedName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("serviceProvidedId")
);
CREATE TABLE IF NOT EXISTS "mp_ProvisionalDiagnosis" (
	"provisionalDiagnosisId"	int NOT NULL,
	"provisionalDiagnosisName"	varchar(200) NOT NULL,
	"category"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("category") REFERENCES "mp_DiseaseCategory"("diseaseCategoryId"),
	PRIMARY KEY("provisionalDiagnosisId")
);
CREATE TABLE IF NOT EXISTS "m_Boolean" (
	"booleanId"	int NOT NULL,
	"booleanDescription"	varchar(100) NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	PRIMARY KEY("booleanId")
);
CREATE TABLE IF NOT EXISTS "mp_HospitalList" (
	"hospitalId"	int NOT NULL,
	"hospitalName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("hospitalId")
);
CREATE TABLE IF NOT EXISTS "mu_Pages" (
	"pageId"	INTEGER,
	"pageName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("pageId" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "mu_PagesFields" (
	"fieldId"	INTEGER,
	"fieldName"	varchar(100) NOT NULL,
	"layoutName"	varchar(100) NOT NULL,
	"pageId"	int NOT NULL,
	"isMandatory"	int NOT NULL,
	"isVisible"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	"alertName"	varchar(100) NOT NULL,
	"fieldType"	varchar(100) DEFAULT NULL,
	FOREIGN KEY("isVisible") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("isMandatory") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("pageId") REFERENCES "mu_Page"("pageId"),
	PRIMARY KEY("fieldId" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "mu_RoleConfiguration" (
	"sno"	INTEGER,
	"roleId"	int NOT NULL,
	"pageId"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("pageId") REFERENCES "mu_Page"("pageId"),
	FOREIGN KEY("roleId") REFERENCES "mu_Role"("roleId"),
	PRIMARY KEY("sno" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "mv_VanDeviceApprove" (
	"userName"	varchar(100) NOT NULL,
	"password"	varchar(100) NOT NULL,
	"registrationNo"	varchar(100) NOT NULL,
	"imeiNo"	varchar(100) NOT NULL,
	"parkingPlace"	varchar(100) NOT NULL,
	"villageId"	int NOT NULL,
	"mandalId"	int NOT NULL,
	"districtID"	int NOT NULL,
	"stateId"	int NOT NULL,
	"gcmToken"	VARCHAR(200) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("stateId") REFERENCES "m_State"("stateId"),
	FOREIGN KEY("districtId") REFERENCES "m_District"("districtId"),
	FOREIGN KEY("mandalId") REFERENCES "m_Mandal"("mandalId"),
	FOREIGN KEY("villageId") REFERENCES "m_Village"("villageId")
);
CREATE TABLE IF NOT EXISTS "ms_Report" (
	"reportId"	int NOT NULL,
	"reportName"	varchar(200) NOT NULL,
	"reportQuery"	varchar(200) NOT NULL,
	"noOfArguments"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL
);
CREATE TABLE IF NOT EXISTS "mp_DiseaseCategory" (
	"diseaseCategoryId"	int NOT NULL,
	"diseaseCategoryName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("diseaseCategoryId")
);
CREATE TABLE IF NOT EXISTS "mp_BeneficiaryType" (
	"beneficiaryTypeId"	int NOT NULL,
	"beneficiaryTypeName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("beneficiaryTypeId")
);
CREATE TABLE IF NOT EXISTS "ds_CleanUploadLog" (
	"logId"	INTEGER,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	FOREIGN KEY("vanid") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	PRIMARY KEY("logId" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "mp_CareProvidedCategory" (
	"careCategoryId"	int NOT NULL,
	"careCategoryName"	varchar(100) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	PRIMARY KEY("careCategoryId")
);
CREATE TABLE IF NOT EXISTS "mp_CareProvided" (
	"CareProvidedId"	int NOT NULL,
	"careProvided"	varchar(200) NOT NULL,
	"careCategoryId"	int NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	FOREIGN KEY("isActive") REFERENCES "m_Boolean"("booleanId"),
	FOREIGN KEY("careCategoryId") REFERENCES "mp_CareProvidedCategory"("careCategoryId"),
	PRIMARY KEY("CareProvidedId")
);
CREATE TABLE IF NOT EXISTS "dp_CareProvided" (
	"patientId"	int NOT NULL,
	"visitId"	INTEGER NOT NULL,
	"deviceId"	INTEGER NOT NULL,
	"vanId"	INTEGER NOT NULL,
	"routeVillageId"	INTEGER NOT NULL,
	"servicePointId"	INTEGER NOT NULL,
	"compoundPatientId"	varchar(200) NOT NULL,
	"visitCount"	INTEGER NOT NULL,
	"careProvidedId"	int NOT NULL,
	"careProvidedOthers"	varchar(200) DEFAULT NULL,
	"insertedBy"	INTEGER NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	INTEGER NOT NULL,
	"updatedDate"	datetime NOT NULL,
	"uploadstatus"	bit DEFAULT 1,
	FOREIGN KEY("careProvidedId") REFERENCES "mp_CareProvided"("careProvidedId"),
	FOREIGN KEY("updatedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("insertedBy") REFERENCES "du_User"("userId"),
	FOREIGN KEY("servicePointId") REFERENCES "mv_ServicePoint"("servicePointId"),
	FOREIGN KEY("routeVillageId") REFERENCES "m_Village"("villageId"),
	FOREIGN KEY("vanId") REFERENCES "mv_Van"("vanId"),
	FOREIGN KEY("deviceId") REFERENCES "mv_Device"("deviceId"),
	FOREIGN KEY("visitId") REFERENCES "dp_Visit"("visitId"),
	FOREIGN KEY("patientId") REFERENCES "dp_Registration"("patientId"),
	PRIMARY KEY("careProvidedId","patientId","visitId","deviceId","vanId","routeVillageId","servicePointId","compoundPatientId")
);
CREATE TABLE IF NOT EXISTS "du_LogEvent" (
	"eventId"	int NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"userId"	int NOT NULL,
	"eventDate"	date NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL,
	PRIMARY KEY("eventId","deviceId","vanId","userId","eventDate")
);
CREATE TABLE IF NOT EXISTS "du_ServicePointLog" (
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"servicePointId"	int NOT NULL,
	"userId"	int NOT NULL,
	"insertedDate"	datetime NOT NULL
);
CREATE TABLE IF NOT EXISTS "mp_ecg" (
	"ecgId"	int NOT NULL,
	"ecgName"	varchar(250) NOT NULL,
	"referral"	varchar(50) NOT NULL,
	"isActive"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedDate"	datetime NOT NULL
);
CREATE TABLE IF NOT EXISTS "dp_ecg" (
	"patientId"	varchar(100) NOT NULL,
	"visitId"	varchar(100) NOT NULL,
	"deviceId"	int NOT NULL,
	"vanId"	int NOT NULL,
	"routeVillageId"	int NOT NULL,
	"servicePointId"	int NOT NULL,
	"compoundPatientId"	varchar(200) NOT NULL,
	"visitCount"	int NOT NULL,
	"ecgId"	int NOT NULL,
	"isReferred"	varchar(100) DEFAULT (NULL),
	"insertedBy"	int NOT NULL,
	"insertedDate"	datetime NOT NULL,
	"updatedBy"	int NOT NULL,
	"updatedDate"	datetime NOT NULL
);
INSERT INTO "android_metadata" ("locale") VALUES ('en_IN');
INSERT INTO "mu_SessionPeriod" ("sessionPeriodId","sessionTypeId","sessionPeriodName","sessionTime","isActive","insertedDate","updatedDate") VALUES (1,1,'MorningSessionstart','9am',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (2,1,'MorningSessionend','12pm',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (3,2,'EveningSessionstart','1pm',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (4,2,'EveningSessionend','6pm',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (5,3,'FullDaySessionstart','9am',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (6,3,'FullDaySessionend','6pm',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (7,4,'ParkingplaceSessionstart','9am',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (8,4,'ParkingplaceSessionend','6pm',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0');
INSERT INTO "mu_SessionType" ("sessionTypeId","sessionTypeName","isActive","insertedDate","updatedDate") VALUES (1,'Morning Session',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (2,'Evening Session',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (3,'Full Session',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0'),
 (4,'Parking place Session',1,'2016-06-14 00:00:00.0','2016-06-14 00:00:00.0');
INSERT INTO "mi_Item" ("itemId","category","genericName","formId","strengthId","itemType","isActive","insertedBy","insertedDate","updatedBy","updatedDate") VALUES (1,'-1','Doxycycline Hydrochloride 100mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (2,'-1','Gamma Bennzene Hexachloride & Cetrimide Lotion',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (3,'-1','Dicyclomine HCL 20mg + PCM 325mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (4,'-1','Iron Syrup',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (5,'-1','Clotrimazole Cream',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (6,'-1','Pantaprazole 40mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (7,'-1','Azithromycin 500mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (8,'-1','Ciprofloxacin Eye/Ear drops',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (9,'-1','Calcium with Vitamin D3 500mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (10,'-1','Fluconazole 150mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (11,'-1','Albendazole 400mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (12,'-1','Cefixime 200mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (13,'-1','Amoxycillin 500mg Cap',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (14,'-1','Paracetamol 500mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (15,'-1','Diclofenac Sodium 50mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (16,'-1','Amocycillin Dry Syrup',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (17,'-1','Cetrizine 10mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (18,'-1','Betadine Liquide',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (19,'-1','Fradiomycin Skin Cream',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (20,'-1','Ciprofloxacin 500mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (21,'-1','Paracetamol Oral sus',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (22,'-1','Glibenclamide Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (23,'-1','vitamin B Complex',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (24,'-1','Atenolol 50mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (25,'-1','Clotrimazole Powder',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (26,'-1','Gentamicin Eye/Eear Drop',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (27,'-1','ORS 21.8 gm',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (28,'-1','Albendazole Oral Sus 200mg',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (29,'-1','Ondansetron 4mg Tab',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (30,'-1','Multivitamin Syrup',-1,-1,1,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (31,'-1','Cotton Role 450grm',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (32,'-1','Hand glove',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (33,'Null','SD Malaria card',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (34,'Null','Prep test card',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (35,'Null','Urine reagent strip',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (36,'Null','Glucometer test',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (37,'Null','Lancet',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (38,'Null','Urine contener',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (39,'Null','Face mask',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (40,'Null','Surgical Spirit 100 ml',-1,-1,2,1,1,'2016-04-11 00:00:00.0',1,'2016-04-11 00:00:00.0'),
 (41,'-1','Iron tab/folic acid',-1,-1,1,1,1,'2016-04-25 00:00:00.0',1,'2016-04-25 00:00:00.0'),
 (42,'-1','Metronidajole-400mg',-1,-1,1,1,1,'2016-04-25 00:00:00.0',1,'2016-04-25 00:00:00.0'),
 (43,'-1','Norfloxacin tz',-1,-1,1,1,1,'2016-04-25 00:00:00.0',1,'2016-04-25 00:00:00.0'),
 (44,'-1','Amlodipine 5mg tab',-1,-1,1,1,1,'2016-06-16 00:00:00.0',1,'2016-06-16 00:00:00.0'),
 (45,'-1','Amoxycillin and potassium clavulanate oral sus',-1,-1,1,1,1,'2016-06-16 00:00:00.0',1,'2016-06-16 00:00:00.0'),
 (46,'-1','Ambroxol hydrochloride & terbutaline sulpher',-1,-1,1,1,1,'2016-06-16 00:00:00.0',1,'2016-06-16 00:00:00.0'),
 (47,'-1','Povidine Iodine lotion',-1,-1,1,1,1,'2016-06-16 00:00:00.0',1,'2016-06-16 00:00:00.0'),
 (48,'-1','Ofloxacin sus',-1,-1,1,1,1,'2016-06-16 00:00:00.0',1,'2016-06-16 00:00:00.0'),
 (49,'-1','Dry Cough syrup',-1,-1,1,1,1,'2016-06-16 00:00:00.0',1,'2016-06-16 00:00:00.0'),
 (50,'-1','Norfloxacin & Betadex Tablet - 400mg',-1,-1,1,1,1,'2016-09-13 00:00:00.0',1,'2016-09-13 00:00:00.0'),
 (51,'-1','Pudin Hara Tab',-1,-1,1,1,1,'2016-11-07 00:00:00.0',1,'2016-11-07 00:00:00.0'),
 (52,'-1','Antacid tab',-1,-1,1,1,1,'2016-11-07 00:00:00.0',1,'2016-11-07 00:00:00.0'),
 (53,'-1','Sinarast Tablet 340mg ',-1,-1,1,1,1,'2016-11-17 00:00:00.0',1,'2016-11-17 00:00:00.0'),
 (54,'-1','Disprin Tablet 100mg ',-1,-1,1,1,1,'2016-11-17 00:00:00.0',1,'2016-11-17 00:00:00.0'),
 (55,'-1','Acelofenac 100mg + Paracetamol 325mg tab',-1,-1,1,1,1,'2016-11-17 00:00:00.0',1,'2016-11-17 00:00:00.0'),
 (56,'-1','Vitamin C Tab - 500mg',-1,-1,1,1,1,'2016-11-17 00:00:00.0',1,'2016-11-17 00:00:00.0'),
 (57,'-1','Vit E, Omega 3 Fatty Acid Capsule - 400mg',-1,-1,1,1,1,'2016-11-17 00:00:00.0',1,'2016-11-17 00:00:00.0'),
 (58,'-1','Sanitary Napkin Packet',-1,-1,2,1,1,'2016-11-17 00:00:00.0',1,'2016-11-17 00:00:00.0'),
 (59,'-1','Lariago tab',-1,-1,1,1,1,'2017-03-17 00:00:00.0',1,'2017-03-17 00:00:00.0'),
 (60,'-1','Povidone Iodine Ointment',-1,-1,1,1,1,'2017-06-28 00:00:00.0',1,'2017-06-28 00:00:00.0'),
 (61,'-1','Metformin 500mg tab',-1,-1,1,1,1,'2017-06-28 00:00:00.0',1,'2017-06-28 00:00:00.0'),
 (62,'-1','Carboxymethyl cellulose eye drop',-1,-1,1,1,1,'2017-06-28 00:00:00.0',1,'2017-06-28 00:00:00.0'),
 (63,'-1','Naphazoline hydrochloride, Chlorocol eye drop',-1,-1,1,1,1,'2017-06-28 00:00:00.0',1,'2017-06-28 00:00:00.0'),
 (64,'-1','Chloramphenicol eye Ointment',-1,-1,1,1,1,'2017-06-28 00:00:00.0',1,'2017-06-28 00:00:00.0'),
 (65,'-1','Multivitamin capsule',-1,-1,1,1,1,'2017-06-28 00:00:00.0',1,'2017-06-28 00:00:00.0'),
 (66,'-1','Amoxycillin & Dicloxacillin capsule',-1,-1,1,1,1,'2017-06-28 00:00:00.0',1,'2017-06-28 00:00:00.0'),
 (67,'-1','Sinarest suspension',-1,-1,1,1,1,'2017-07-24 00:00:00.0',1,'2017-07-24 00:00:00.0'),
 (68,'-1','Multivitamin drop',-1,-1,1,1,1,'2017-07-24 00:00:00.0',1,'2017-07-24 00:00:00.0'),
 (69,'-1','Antihistamin Eye Drop',-1,-1,1,1,1,1,'2018-01-04 15:14:05','2018-01-04 15:14:05'),
 (70,'-1','Amoxycillin Trihydrate Disp. Tab',-1,-1,1,1,1,1,'2018-01-17 14:20:06','2018-01-17 14:20:06'),
 (71,'-1','Alkacitrol Syrup',-1,-1,1,1,1,1,'2018-03-16 11:04:21','2018-03-16 11:04:21'),
 (72,'-1','Paracetamol 650mg Tab',-1,-1,1,1,1,1,'2018-05-09 18:25:16','2018-05-09 18:25:16'),
 (73,'1','Amoxicillin and potassium clavulanate 625mg Tab',1,1,1,1,1,1,'2018-07-03 17:53:33','2018-07-03 17:53:33'),
 (74,'1','Ranitidine 150mg Tab',1,1,1,1,1,'2018-10-08 15:21:48.0',1,'2018-10-08 15:21:48.0'),
 (75,'-1','Metronidazole suspension',-1,-1,1,1,1,1,'2018-12-17 11:57:24','2018-12-17 11:57:24'),
 (76,'-1','Glimepiride 1mg tab',-1,-1,1,1,1,1,'2019-02-02 10:44:26','2019-02-02 10:44:26'),
 (77,'-1','Vit A& D Cap',-1,-1,1,1,1,1,'2019-02-02 10:45:19','2019-02-02 10:45:19'),
 (78,'-1','Bandage 6 inch',-1,-1,2,1,1,1,'2019-02-02 10:46:10','2019-02-02 10:46:10'),
 (79,'-1','HB Strip',-1,-1,2,1,1,1,'2019-04-19 13:38:49','2019-04-19 13:38:49');
INSERT INTO "mi_Form" ("formId","formName","isActive","insertedDate","updatedDate") VALUES (1,'FORM1',1,'2016-02-29','2016-02-29'),
 (2,'FORM2',1,'2016-02-29','2016-02-29'),
 (3,'FORM3',1,'2016-02-29','2016-02-29'),
 (4,'FORM4',1,'2016-02-29','2016-02-29');
INSERT INTO "mi_Strength" ("strengthId","description","isActive","insertedDate","updatedDate") VALUES (1,'DESCRIPTION1',1,'2016-02-29','2016-02-29'),
 (2,'DESCRIPTION2',1,'2016-02-29','2016-02-29'),
 (3,'DESCRIPTION3',1,'2016-02-29','2016-02-29'),
 (4,'DESCRIPTION4',1,'2016-02-29','2016-02-29');
INSERT INTO "mi_Dosage" ("dosageId","dosageName","isActive","insertedDate","updatedDate") VALUES (1,'20ml',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (2,'10ml',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (3,'50ml',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (4,'15ml',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (5,'5ml',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0');
INSERT INTO "mi_Interval" ("intervalId","intervalName","isActive","insertedDate","updatedDate") VALUES (1,'Once Daily',1,'2016-02-29','2016-02-29'),
 (2,'Twice Daily',1,'2016-02-29','2016-02-29'),
 (3,'Thrice Daily',1,'2016-02-29','2016-02-29'),
 (4,'Four Times in a Day',1,'2016-02-29','2016-02-29'),
 (5,'Stat Dose',1,'2016-02-29','2016-02-29');
INSERT INTO "mi_Instruction" ("instructionId","instructionName","isActive","insertedDate","updatedDate") VALUES (1,'Before Food',1,'2016-02-29','2016-02-29'),
 (2,'After Food',1,'2016-02-29','2016-02-29'),
 (3,'Before Breakfast',1,'2016-02-29','2016-02-29'),
 (4,'At bedtime',1,'2016-02-29','2016-02-29');
INSERT INTO "mi_Duration" ("durationId","durationName","isActive","insertedDate","updatedDate") VALUES (1,'1 Day',1,'2016-02-29','2016-02-29'),
 (2,'2 Days',1,'2016-02-29','2016-02-29'),
 (3,'3 Days',1,'2016-02-29','2016-02-29'),
 (4,'4 Days',1,'2016-02-29','2016-02-29'),
 (5,'5 Days',1,'2016-02-29','2016-02-29'),
 (6,'7 Days',1,'2016-02-29','2016-02-29'),
 (7,'10 Days',1,'2016-02-29','2016-02-29'),
 (8,'14 Days',1,'2016-02-29','2016-02-29'),
 (9,'15 Days',1,'2016-02-29','2016-02-29'),
 (10,'3 Weeks',1,'2016-02-29','2016-02-29'),
 (11,'1 Month',1,'2016-02-29','2016-02-29'),
 (12,'To continue till further orders',1,'2016-02-29','2016-02-29'),
 (13,'Other',1,'2016-02-29','2016-02-29');
INSERT INTO "mi_ItemType" ("itemTypeId","itemTypeName","description","isActive","insertedDate","updatedDate") VALUES (1,'DRUG','null',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (2,'CONSUMABLE','null',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0');
INSERT INTO "mi_TransactionType" ("transactionTypeid","transactionType","isActive","insertedDate","updatedDate") VALUES (1,'TRANSACTIONTYPE1',1,'2016-02-29','2016-02-29'),
 (2,'TRANSACTIONTYPE2',1,'2016-02-29','2016-02-29'),
 (3,'TRANSACTIONTYPE3',1,'2016-02-29','2016-02-29');
INSERT INTO "mu_Role" ("roleId","rolename","hasLogin","isActive","insertedDate","updatedDate") VALUES (1,'Admin',1,1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (2,'Driver',1,1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (3,'Pharmacist',1,1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (4,'RMO',1,1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (5,'ANM',1,1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (6,'Lab Technician',1,1,'2016-03-17 13:51:17.0','2016-03-17 13:51:17.0'),
 (7,'ADC',1,1,'2016-03-17 13:51:52.0','2016-03-17 13:51:52.0'),
 (8,'DC',1,1,'2016-08-06 13:25:26.0','2016-08-06 13:25:26.0'),
 (9,'PPE',1,1,'2018-01-04 00:00:00.0','2018-01-04 00:00:00.0'),
 (10,'AWW',1,1,'2018-01-04 00:00:00.0','2018-01-04 00:00:00.0'),
 (11,'ASHA',1,1,'2018-01-04 00:00:00.0','2018-01-04 00:00:00.0'),
 (13,'Doctor',1,1,'2018-01-04 00:00:00.0','2018-01-04 00:00:00.0'),
 (14,'Nurse',1,1,'2018-01-04 00:00:00.0','2018-01-04 00:00:00.0'),
 (15,'Helper',1,1,'2018-01-04 00:00:00.0','2018-01-04 00:00:00.0'),
 (12,'DEO',1,1,'2018-01-04 00:00:00.0','2018-01-04 00:00:00.0');
INSERT INTO "du_User" ("userId","firstName","lastName","userName","password","genderId","dob","fatherName","phone","address","email","age","ageTypeId","doj","roleId","userImageUrl","isActive","deviceId","vanId","insertedBy","insertedDate","updatedBy","updatedDate") VALUES (1,'NA','NA','bpscl','bpscl',-1,'2018-01-03 19:37:41.0','NA','NA','NA','NA',-1,-1,'2018-01-03 19:37:41.0',1,'[B@bf57f1',1,1,1,-1,'2018-01-03 19:37:41.0',-1,'2018-01-03 19:37:41.0');
INSERT INTO "mv_Van" ("vanId","vanCode","registrationNo","parkingPlaceId","mandalId","districtID","stateId","villageId","isActive","insertedDate","updatedDate") VALUES (1,'VAN002','TS09ER4026',2,11,23,1,7,1,'2018-01-03 19:42:41','2018-01-03 19:42:41'),
 (8,'VAN008','JH09AC1550',6,11,23,1,9,1,'2019-05-02 12:46:50','2019-05-02 12:46:50');
INSERT INTO "mv_Device" ("deviceId","deviceUniqueId","isApproved","vanId","deviceModel","tabServerIP","serverIP","gcmToken","isActive","insertedDate","updatedDate") VALUES (1,'864115032543572',1,2,'Samsung','3','1','cM7hyH3h0og:APA91bHjXucV3ohuIfCXNqeixPed8g0ETptzGa_zS85EaSpzBwHuNC_hFpZLsEcJ89AKIpwQ3IQtBWOB64YxrZhGBqWWDBQvniF6fJHn5H_xAmRa-h_No9Ck5J59r3KW6byuPudTiLVC',1,'2018-01-03 19:42:41','2018-01-03 19:42:41');
INSERT INTO "mv_ServicePoint" ("servicePointId","servicePointCode","servicePointName","villageId","mandalId","districtId","stateId","weekDay","weekNo","isActive","insertedDate","updatedDate") VALUES (1,'SP0002000001','Tupkadih',1,2,28,21,'Thursday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (2,'SP0002000002','Baruatand',2,2,28,21,'Tuesday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (3,'SP0002000003','Nirmaldih',3,2,28,21,'Friday',2,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (4,'SP0002000004','Thakurtand',4,2,28,21,'Friday',5,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (5,'SP0002000005','Kenduadih',5,2,28,21,'Monday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (6,'SP0002000006','Buchungdih',6,2,28,21,'Monday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (7,'SP0002000007','Kalyanpur',7,2,28,21,'Monday',2,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (8,'SP0002000008','Bandhdih',8,2,28,21,'Monday',5,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (9,'SP0002000009','Kumhardih',9,2,28,21,'Monday',2,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (10,'SP0002000010','Totadih',10,2,28,21,'Monday',5,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (11,'SP0001000011','Chainpur',11,1,28,21,'Tuesday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (12,'SP0001000012','Bansimli',12,1,28,21,'Saturday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (13,'SP0001000013','Dharampura',13,1,28,21,'Wednesday',5,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (14,'SP0001000014','Dudhimati',14,1,28,21,'Tuesday',2,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (15,'SP0001000015','Bandhudih',15,1,28,21,'Wednesday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (16,'SP0001000016','Haridih',16,1,28,21,'Friday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (17,'SP0001000017','Nawadih',17,1,28,21,'Thursday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (18,'SP0001000018','Murtitand',18,1,28,21,'Friday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (19,'SP0001000019','Kamaldih',19,1,28,21,'Thursday',1,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (20,'SP0001000020','Siyardaha',20,1,28,21,'Thursday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (21,'SP0001000021','Mamarkudar',21,1,28,21,'Tuesday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (22,'SP0001000022','Harlagoda',22,1,28,21,'Wednesday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (23,'SP0001000023','Sonabad',23,1,28,21,'Wednesday',5,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (24,'SP0001000024','Bahadurpur',24,1,28,21,'Monday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (25,'SP0001000025','Ranipokhar',25,1,28,21,'Monday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (26,'SP0001000026','Ramdih More (Basti)',26,1,28,21,'Monday',2,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (27,'SP0001000027','Bhathuwa',27,1,28,21,'Monday',5,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (28,'SP0001000028','Chophand',28,1,28,21,'Monday',2,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (29,'SP0001000029','Pupunki',29,1,28,21,'Monday',5,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (30,'SP0001000030','Kumbhari',30,1,28,21,'Tuesday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (31,'SP0001000031','Kalapatthar',31,1,28,21,'Saturday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (32,'SP0001000032','Dumarjore',32,1,28,21,'Wednesday',5,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (33,'SP0001000033','Alkusha',33,1,28,21,'Tuesday',2,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (34,'SP0001000034','Badhadih',34,1,28,21,'Wednesday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (35,'SP0001000035','Ghatiyali',35,1,28,21,'Friday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (36,'SP0001000036','Amdiha',36,1,28,21,'Thursday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (37,'SP0001000037','Satanpur',37,1,28,21,'Friday',3,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (38,'SP0001000038','Sijuwa',38,1,28,21,'Thursday',1,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (39,'SP0001000039','Shikaridih',39,1,28,21,'Thursday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (40,'SP0001000040','Karmagora',40,1,28,21,'Tuesday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (41,'SP0001000041','Chaitatand',41,1,28,21,'Sunday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (42,'SP0001000042','Chitahi',42,1,28,21,'Friday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (43,'SP0001000043','Kashidih',43,1,28,21,'Wednesday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (44,'SP0001000044','Nichitpur',44,1,28,21,'Monday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (45,'SP0001000045','Brahman Dwarika',45,1,28,21,'Saturday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (46,'SP0001000046','Siyargajra',46,1,28,21,'Thursday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (47,'SP0001000047','Gomdidih',47,1,28,21,'Tuesday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (48,'SP0001000048','Chiksia',48,1,28,21,'Sunday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (49,'SP0001000049','Bodro',49,1,28,21,'Friday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (50,'SP0001000050','Kumarpur',50,1,28,21,'Wednesday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (51,'SP0001000051','Dhobni',51,1,28,21,'Monday',4,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (52,'SP0001000052','Santhaldih',52,1,28,21,'Monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (53,'SP0001000053','Baghraibera',53,1,28,21,'Monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (54,'SP0001000054','Choura',54,1,28,21,'monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (55,'SP0001000055','Choura Munda basti',55,1,28,21,'Monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (56,'SP0001000056','Kunwarpur',56,1,28,21,'Monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (57,'SP0001000057','Partand',57,1,28,21,'Monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (58,'SP0001000058','Radhagaon',58,1,28,21,'Monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (59,'SP0001000059','Gurgudi',59,1,28,21,'Monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (60,'SP0001000060','Buchungdih',60,2,28,21,'Monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (61,'SP0001000061','Kenduadih',61,2,28,21,'Monday',4,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (62,'SP0002000062','Vishwanathdih',62,1,28,21,'Monday',3,1,'2017-02-20 00:00:00.0','2017-02-20 00:00:00.0'),
 (63,'SP0001000063','Hanuman nagar',63,1,28,21,'Tuesday',4,1,'2018-01-04 15:11:19','2018-01-04 15:11:19');
INSERT INTO "mv_ParkingPlace" ("parkingPlaceId","parkingPlaceName","parkingPlaceAddress","districtId","isActive","insertedDate","updatedDate") VALUES (2,'packing','packing',23,1,'2018-01-03 19:42:41','2018-01-03 19:42:41');
INSERT INTO "mv_Route" ("routeId","routeName","vanId","districtId","parkingPlaceId","morningServicePoint","eveningServicePoint","weekDay","weekNo","isActive","insertedDate","updatedDate") VALUES (210002,'GOGIKONAGOGIKONA',1,23,1,1,1,0,1,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210004,'GOGIPETHGOGIPETH',1,23,1,2,2,0,1,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210006,'KANCHANKAIKANCHANKAI',1,23,1,3,3,0,1,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210008,'RAJAPURRAJAPUR',1,23,1,4,4,0,1,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210010,'KARKIHALLIKARKIHALLI',1,23,1,5,5,0,1,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210012,'RABBANHALLIOMMER DODDI',1,23,1,6,11,0,2,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210014,'DAKSHINPURDAKSHINPUR',1,23,1,7,7,0,2,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210016,'GOGIKONA THANDA 1GOGIKONA THANDA 2',1,23,1,8,12,0,2,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210018,'DIGGIDIGGI',1,23,1,9,9,0,2,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210020,'SAIDAPURSAIDAPUR',1,23,1,10,10,0,2,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210022,'GOGIKONAGOGIKONA',1,23,1,1,1,0,3,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210024,'GOGIPETHGOGIPETH',1,23,1,2,2,0,3,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210026,'KANCHANKAIKANCHANKAI',1,23,1,3,3,0,3,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210028,'RAJAPURRAJAPUR',1,23,1,4,4,0,3,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210030,'KARKIHALLIKARKIHALLI',1,23,1,5,5,0,3,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210032,'RABBANHALLIOMMER DODDI',1,23,1,6,11,0,4,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210034,'DAKSHINPURDAKSHINPUR',1,23,1,7,7,0,4,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210036,'GOGIKONA THANDA 1GOGIKONA THANDA 2',1,23,1,8,12,0,4,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210038,'DIGGIDIGGI',1,23,1,9,9,0,4,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0'),
 (210040,'SAIDAPURSAIDAPUR',1,23,1,10,10,0,4,1,'2016-06-24 11:00:00.0','2016-06-24 11:00:00.0');
INSERT INTO "mv_VehicleRoute" ("vehicleRouteId","vanId","routeId","weekDay","weekNo","isActive","insertedDate","updatedDate") VALUES (1,1,210002,'Monday',1,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (2,1,210004,'Tuesday',1,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (3,1,210006,'Wednesday',1,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (4,1,210008,'Thursday',1,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (5,1,210010,'Friday',1,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (6,1,210012,'Monday',2,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (7,1,210014,'Tuesday',2,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (8,1,210016,'Wednesday',2,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (9,1,210018,'Thursday',2,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (10,1,210020,'Friday',2,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (11,1,210022,'Monday',3,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (12,1,210024,'Tuesday',3,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (13,1,210026,'Wednesday',3,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (14,1,210028,'Thursday',3,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (15,1,210030,'Friday',3,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (16,1,210032,'Monday',4,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (17,1,210034,'Tuesday',4,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (18,1,210036,'Wednesday',4,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (19,1,210038,'Thursday',4,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0'),
 (20,1,210040,'Friday',4,1,'2016-06-27 11:00:00.0','2016-06-27 11:00:00.0');
INSERT INTO "m_State" ("stateId","stateName","stateShortName","stateCode","isActive","insertedDate","updatedDate") VALUES (21,'Jharkhand','Mamatha','21',1,'2014-06-30 22:33:54.797','2014-06-30 22:33:54.797');
INSERT INTO "m_District" ("districtId","districtName","districtShortName","districtCode","stateId","isActive","insertedDate","updatedDate") VALUES (28,'Bokaro','BK','BKR',21,1,'2017-01-03 00:00:00.0','2017-01-03 00:00:00.0');
INSERT INTO "m_Mandal" ("mandalId","mandalName","mandalShortName","mandalCode","districtId","stateId","isActive","insertedDate","updatedDate") VALUES (1,'Chas','Jar','1',28,21,1,'2016-02-20 17:20:01.58','2016-02-20 17:20:01.58'),
 (2,'Jaridih','CH','2',28,21,1,'2016-04-11 18:42:31.13','2016-04-11 18:42:31.13');
INSERT INTO "m_Village" ("villageId","villageName","villageCode","population","latitude","longitude","mandalId","districtId","stateId","isActive","insertedDate","updatedDate") VALUES (1,'Tupkadih','SP0002000001','null','null','null',2,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (2,'Baruatand','SP0002000002','null','null','null',2,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (3,'Nirmaldih','SP0002000003','','','',2,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (4,'Thakurtand','SP0002000004','','','',2,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (5,'Kenduadih','SP0002000005','','','',2,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (6,'Buchungdih','SP0002000006','','','',2,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (7,'Kalyanpur','SP0002000007','','','',2,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (8,'Bandhdih','SP0002000008','','','',2,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (9,'Kumhardih','SP0002000009','','','',2,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (10,'Totadih','SP0002000010','','','',2,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (11,'Chainpur','SP0001000011','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (12,'Bansimli','SP0001000012','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (13,'Dharampura','SP0001000013','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (14,'Dudhimati','SP0001000014','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (15,'Bandhudih','SP0001000015','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (16,'Haridih','SP0001000016','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (17,'Nawadih','SP0001000017','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (18,'Murtitand','SP0001000018','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (19,'Kamaldih','SP0001000019','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (20,'Siyardaha','SP0001000020','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (21,'Mamarkudar','SP0001000021','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (22,'Harlagoda','SP0001000022','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (23,'Sonabad','SP0001000023','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (24,'Bahadurpur','SP0001000024','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (25,'Ranipokhar','SP0001000025','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (26,'Ramdih More (Basti)','SP0001000026','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (27,'Bhathuwa','SP0001000027','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (28,'Chophand','SP0001000028','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (29,'Pupunki','SP0001000029','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (30,'Kumbhari','SP0001000030','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (31,'Kalapatthar','SP0001000031','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (32,'Dumarjore','SP0001000032','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (33,'Alkusha','SP0001000033','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (34,'Badhadih','SP0001000034','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (35,'Ghatiyali','SP0001000035','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (36,'Amdiha','SP0001000036','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (37,'Satanpur','SP0001000037','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (38,'Sijuwa','SP0001000038','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (39,'Shikaridih','SP0001000039','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (40,'Karmagora','SP0001000040','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (41,'Chaitatand','SP0001000041','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (42,'Chitahi','SP0001000042','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (43,'Kashidih','SP0001000043','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (44,'Nichitpur','SP0001000044','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (45,'Brahman Dwarika','SP0001000045','null','null','null',1,28,21,1,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (46,'Siyargajra','SP0001000046','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (47,'Gomdidih','SP0001000047','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (48,'Chiksia','SP0001000048','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (49,'Bodro','SP0001000049','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (50,'Kumarpur','SP0001000050','','','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (51,'Dhobni','SP0001000051',0,'','',1,28,21,2,'2016-04-08 00:00:00.0','2016-04-08 00:00:00.0'),
 (52,'Santhaldih','SP0001000052','null','null','null',1,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (53,'Baghraibera','SP0001000053','null','null','null',1,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (54,'Choura','SP0001000054','null','null','null',1,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (55,'Choura Munda basti','SP0001000055','null','null','null',1,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (56,'Kunwarpur','SP0001000056','null','null','null',1,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (57,'Partand','SP0001000057','null','null','null',1,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (58,'Radhagaon','SP0001000058','null','null','null',1,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (59,'Gurgudi','SP0001000059','null','null','null',1,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (60,'Buchungdih','SP0002000060','null','null','null',2,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (61,'Kenduadih','SP0002000061','null','null','null',2,28,21,1,'2016-11-07 00:00:00.0','2016-11-07 00:00:00.0'),
 (62,'Vishwanathdih','SP0002000062','null','null','null',1,28,21,1,'2017-02-20 00:00:00.0','2017-02-20 00:00:00.0'),
 (63,'Hanuman nagar','SP00063','','','',1,28,21,1,'2018-01-04 15:09:51','2018-01-04 15:09:51');
INSERT INTO "mp_Gender" ("genderId","gender","isActive","insertedDate","updatedDate") VALUES (1,'MALE',1,'2016-02-25 00:00:00.0','2016-02-08 00:00:00.0'),
 (2,'FEMALE',1,'2016-02-25 00:00:00.0','2016-02-08 00:00:00.0'),
 (3,'OTHERS',1,'2016-02-25 00:00:00.0','2016-02-08 00:00:00.0');
INSERT INTO "mp_Religion" ("religionId","religionName","isActive","insertedDate","updatedDate") VALUES (1,'Hindu',1,'2018-01-05 21:17:43','2018-01-05 21:17:43'),
 (2,'Muslim',1,'2018-01-05 21:18:28','2018-01-05 21:18:28'),
 (3,'Christian',1,'2018-01-05 21:18:45','2018-01-05 21:18:45'),
 (4,'Other',1,'2018-01-05 21:19:00','2018-01-05 21:19:00');
INSERT INTO "mp_Community" ("communityId","communityName","communityShortName","isActive","insertedDate","updatedDate") VALUES (1,'OC','null',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (2,'SC','null',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (3,'ST','null',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (4,'BC','null',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (5,'Christian','null',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (6,'Muslim','null',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (7,'Not Given','null',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0');
INSERT INTO "mp_AgeCategory" ("ageCategoryId","ageCategoryName","description","isActive","insertedDate","updatedDate") VALUES (1,'Adults( > 18 years)','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (2,'Children','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (3,'All','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (4,'Reproductive Age(15-45 years)','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (5,'Neonate( 0 to 28 days)','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (6,'Infant( 29 days to 1 year)','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (7,'CHILD(1-5 YRS)','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (8,'CHILD(6-10 YRS)','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (9,'Adolescent(10-19 years)','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (10,'Adult(>19 years)','null',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0');
INSERT INTO "mp_AgeUnit" ("ageUnitId","ageUnitName","isActive","insertedDate","updatedDate") VALUES (1,'Days',1,'2017-08-30 00:00:00.0','2017-08-30 00:00:00.0'),
 (2,'Months',1,'2017-08-30 00:00:00.0','2017-08-30 00:00:00.0'),
 (3,'Years',1,'2017-08-30 00:00:00.0','2017-08-30 00:00:00.0');
INSERT INTO "mp_EconomicStatus" ("economicStatusId","economicStatusName","isActive","insertedDate","updatedDate") VALUES (1,'BPL',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (2,'APL',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (3,'Dont Know',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0');
INSERT INTO "mp_EducationStatus" ("educationStatusId","educationStatusName","isActive","insertedDate","updatedDate") VALUES (1,'Illiterate',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (2,'Primary School',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (3,'High School',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (4,'College',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0');
INSERT INTO "mp_MaritalStatus" ("maritalStatusId","maritalStatusName","isActive","insertedDate","updatedDate") VALUES (1,'Married',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (2,'UnMarried',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (3,'Divorced',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (4,'Separated',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (5,'Widow',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (6,'Widower',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (7,'Not applicable',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0');
INSERT INTO "mp_SocialStatus" ("socialStatusId","socialStatusName","isActive","insertedDate","updatedDate") VALUES (1,'OC',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (2,'BC',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (3,'SC',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (4,'ST',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (5,'Muslim',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (6,'Christian',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0'),
 (7,'Others',1,'2016-02-29 00:00:00.0','2016-03-01 00:00:00.0');
INSERT INTO "mp_ChronicDisease" ("chronicDiseaseId","chronicDiseaseName","chronicDiseaseCode","isActive","insertedDate","updatedDate") VALUES (1,'Hypertension','NCD',1,'2016-02-29','2016-03-01'),
 (2,'Asthama','Astha',1,'2016-02-29','2016-03-01'),
 (3,'Malaria','malria',1,'2016-02-29','2016-03-01');
INSERT INTO "mp_LabTest" ("labTestId","labTestName","specimenId","normalValue","validValues","units","isActive","insertedDate","updatedDate") VALUES (1,'Urine-Albumin',2,'Nil','Select~Nil~Trace~1+~2+~3+','null',1,'2017-08-25 00:00:00.0','2017-08-25 00:00:00.0'),
 (2,'Urine-Sugar',2,'Nil','Select~Nil~1+~2+~3+','null',1,'2017-08-25 00:00:00.0','2017-08-25 00:00:00.0'),
 (3,'HB %',1,'Male-11:15 Female-10:13','4--18','gm/100ml',1,'2017-08-25 00:00:00.0','2017-08-25 00:00:00.0'),
 (9,'Fasting Blood Sugar',1,'70:110','60--500','mg%',1,'2017-08-25 00:00:00.0','2017-08-25 00:00:00.0'),
 (10,'Post Lunch Blood Sugar',1,'120:160','100--500','mg%',1,'2017-08-25 00:00:00.0','2017-08-25 00:00:00.0'),
 (12,'RBS',1,'Less than 180','60--500','mg%',1,'2017-08-25 00:00:00.0','2017-08-25 00:00:00.0'),
 (14,'Pregnancy Confirmation',2,'null','Select~Negative~Positive','null',1,'2017-08-25 00:00:00.0','2017-08-25 00:00:00.0'),
 (17,'Others',1,'null','null','null',1,'2017-08-25 00:00:00.0','2017-08-25 00:00:00.0'),
 (18,'Malaria',1,'null','Select~Negative~Positive','null',1,'2017-08-25 00:00:00.0','2017-08-25 00:00:00.0'),
 (11,'ECG',1,'','Select~No~Yes','',1,'2019-08-16 11:05:44.0','2019-08-16 11:05:44.0');
INSERT INTO "mp_ServiceProvided" ("serviceProvidedId","serviceProvidedName","isActive","insertedDate","updatedDate") VALUES (1,'Chronic CDs',1,'2016-02-29','2016-03-01'),
 (2,'Common CDs',1,'2016-02-29','2016-03-01'),
 (3,'Common NCDs',1,'2016-02-29','2016-03-01'),
 (4,'Mental Illness',1,'2016-02-29','2016-03-01'),
 (5,'Dental Care',1,'2016-02-29','2016-03-01'),
 (6,'Eye Care',1,'2016-02-29','2016-03-01'),
 (7,'ENT Care',1,'2016-02-29','2016-03-01'),
 (8,'Acute Simple Illness',1,'2016-02-29','2016-03-01'),
 (9,'Emergency Medicine',1,'2016-02-29','2016-03-01'),
 (10,'Others',1,'2016-02-29','2016-03-01'),
 (11,'Maternal Health-ANC',1,'2016-02-29','2016-03-01'),
 (12,'Maternal Health-PNC',1,'2016-02-29','2016-03-01'),
 (13,'Reproductive Health',1,'2016-02-29','2016-03-01');
INSERT INTO "mp_ProvisionalDiagnosis" ("provisionalDiagnosisId","provisionalDiagnosisName","category","isActive","insertedDate","updatedDate") VALUES (1,'Hypertension',2,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (2,'Diabetes Mellitus',2,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (3,'Defective vision',2,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (4,'Epilepsy',2,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (5,'Asthma',2,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (13,'NCD_Other',2,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (6,'Tuberculosis',1,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (7,'Malaria',1,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (8,'Accute Diarrhoeal Disease',1,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (9,'Respiratory Infections',1,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (10,'Skin Infection',1,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (11,'Leprosy',1,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (12,'CD_Other',1,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (14,'Allergy',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (15,'Anaemia',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (16,'Angular Stomatitis,Glossitis',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (17,'APD (Acid Peptic Disorder)',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (18,'Arthritis',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (19,'Backache',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (20,'Conjunctivitis',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (21,'Dysentry',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (22,'DUB (Dysfunctional Uterine Bleeding)',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (23,'Fungal Infection',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (24,'General weakness',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (25,'Headache',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (26,'Indigestion',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (27,'Jaundice',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (28,'Myalgia',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (29,'Neuritis',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (30,'Fever',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (31,'Scabies',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (32,'UTI (Urinary Track Infection)',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (33,'Worm Infestation',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (34,'MinorAilments_Others',3,1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (45,'Anorexia',3,1,'2018-02-06 17:22:08','2018-02-06 17:22:08'),
 (46,'Discharge ear',3,1,'2018-02-06 17:22:36','2018-02-06 17:22:36'),
 (47,'Bleeding gum',3,1,'2018-02-06 17:23:26','2018-02-06 17:23:26'),
 (48,'Dry eye syndrome',3,1,'2018-02-06 17:23:56','2018-02-06 17:23:56'),
 (49,'Eye infection',3,1,'2018-02-06 17:24:18','2018-02-06 17:24:18'),
 (35,'Cough',3,1,'2018-02-06 17:08:11','2018-02-06 17:08:11'),
 (36,'Cold',3,1,'2018-02-06 17:08:41','2018-02-06 17:08:41'),
 (37,'Bodyache',3,1,'2018-02-06 17:10:00','2018-02-06 17:10:00'),
 (38,'Giddiness',3,1,'2018-02-06 17:11:07','2018-02-06 17:11:07'),
 (39,'Joint pain',3,1,'2018-02-06 17:11:42','2018-02-06 17:11:42'),
 (42,'Nausea',3,1,'2018-02-06 17:17:03','2018-02-06 17:17:03'),
 (43,'Pain abdominal',3,1,'2018-02-06 17:18:52','2018-02-06 17:18:52'),
 (44,'Gastritis',3,1,'2018-02-06 17:20:11','2018-02-06 17:20:11'),
 (40,'Leucorrhoea',3,1,'2018-02-06 17:12:20','2018-02-06 17:12:20'),
 (41,'Toothache',3,1,'2018-02-06 17:15:13','2018-02-06 17:15:13');
INSERT INTO "m_Boolean" ("booleanId","booleanDescription","insertedDate","updatedDate") VALUES (2,'No','2016-02-29','2016-03-01'),
 (1,'Yes','2016-02-29','2016-03-01');
INSERT INTO "mp_HospitalList" ("hospitalId","hospitalName","isActive","insertedDate","updatedDate") VALUES (1,'Sadar Hospital',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (2,'Others',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (3,'Dhanbad District Hospital',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0'),
 (4,'PMCH',1,'2017-08-01 00:00:00.0','2017-08-01 00:00:00.0');
INSERT INTO "mu_Pages" ("pageId","pageName","isActive","insertedDate","updatedDate") VALUES (1,'ROUTE',1,'2016-08-06 13:56:23.0','2016-08-06 13:56:23.0'),
 (2,'REGISTRATION',1,'2016-08-06 13:56:50.0','2016-08-06 13:56:50.0'),
 (3,'VITALS',1,'2016-08-06 13:57:26.0','2016-08-06 13:57:26.0'),
 (4,'DOCTOR',1,'2016-08-06 13:57:35.0','2016-08-06 13:57:35.0'),
 (5,'LABTEST',1,'2016-08-06 13:57:57.0','2016-08-06 13:57:57.0'),
 (6,'MEDICINE DISPENCE',1,'2016-08-06 13:58:19.0','2016-08-06 13:58:19.0'),
 (7,'SEARCH BENFICIARY',1,'2016-08-06 13:58:50.0','2016-08-06 13:58:50.0'),
 (8,'STAFF REGISTRATION',1,'2016-08-06 13:59:07.0','2016-08-06 13:59:07.0'),
 (9,'EDIT STAFF REGISTRATION',1,'2016-08-06 13:59:23.0','2016-08-06 13:59:23.0'),
 (10,'STAFF ATTENDANCE',1,'2016-08-06 13:59:37.0','2016-08-06 13:59:37.0'),
 (11,'BENEFICIARY HISTORY',1,'2016-08-06 14:00:34.0','2016-08-06 14:00:34.0'),
 (12,'VAN SCHEDULE',1,'2016-08-06 14:00:48.0','2016-08-06 14:00:48.0'),
 (13,'CONSUMABLE DISPENCE',1,'2016-08-06 14:01:03.0','2016-08-06 14:01:03.0'),
 (14,'OTHER OPTIONS',1,'2016-08-06 14:01:29.0','2016-08-06 14:01:29.0'),
 (15,'EXPENDITURE REPORTS',1,'2016-08-06 14:01:44.0','2016-08-06 14:01:44.0'),
 (16,'DB BACKUP',1,'2016-08-06 14:01:58.0','2016-08-06 14:01:58.0'),
 (17,'DB RESTORE',1,'2016-08-06 14:02:34.0','2016-08-06 14:02:34.0'),
 (18,'Upload Status',1,'2016-08-06 14:03:04.0','2016-08-06 14:03:04.0'),
 (19,'CARE PROVIDED',1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0'),
 (20,'EditRegistation',1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0'),
 (21,'MEDICINE_ NEW_DISPENCE',1,'2017-12-12 12:33:55.0','2017-12-12 12:33:55.0'),
 (22,'CONSUMABLE_ NEW_DISPENCE',1,'2017-12-12 12:34:47.0','2017-12-12 12:34:47.0');
INSERT INTO "mu_PagesFields" ("fieldId","fieldName","layoutName","pageId","isMandatory","isVisible","insertedDate","updatedDate","alertName","fieldType") VALUES (2,'reg_tv_dateOfRegistration','reg_lo_dateOfRegistration',2,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (3,'reg_et_benficiary_name','reg_lo_benficiary_name',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenficiaryName','EditText'),
 (4,'reg_et_surname','reg_lo_surname',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','SurName','EditText'),
 (5,'reg_sp_gender','reg_lo_gender',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Gender','Spinner'),
 (6,'reg_et_age','reg_lo_age',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Age','EditText'),
 (7,'reg_sp_pregnancy','reg_layout_pregnancy',2,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Preganancy','Spinner'),
 (8,'reg_tv_dob','reg_lo_dob',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','DOB','TextView'),
 (9,'reg_sp_age_group','reg_lo_age_group',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','AgeGroup','Spinner'),
 (10,'reg_et_personal_number','reg_lo_personal_number',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Personal Number','EditText'),
 (11,'reg_et_family_number','reg_lo_family_number',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Family Number','EditText'),
 (12,'reg_sp_caste','reg_lo_caste',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Caste','Spinner'),
 (13,'reg_sp_religion','reg_lo_religion',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Religion','Spinner'),
 (14,'reg_et_no_of_familyNumbers','reg_lo_no_of_familyNumbers',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','no of Family Numbers','EditText'),
 (15,'reg_cb_bpl','reg_lo_bpl',2,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BPL','CheckBox'),
 (16,'reg_cb_handicaped','reg_lo_handicaped',2,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Handicaped','CheckBox'),
 (17,'vitals_sp_benId','vitals_lo_benId',3,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenId','Spinner'),
 (18,'vitals_et_height','vitals_lo_height',3,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Height','EditText'),
 (19,'vitals_et_weight','vitals_lo_weight',3,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Weight','EditText'),
 (20,'vitals_et_bmi','vitals_lo_bmi',3,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BMI','EditText'),
 (21,'vitals_et_temperature','vitals_lo_temperature',3,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Temperature','EditText'),
 (22,'vitals_et_pulse','vitals_lo_pulse',3,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Pulse','EditText'),
 (23,'vitals_et_bp_systolic','vitals_lo_bp_systolic',3,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BPSystolic','EditText'),
 (24,'vitals_et_rr','vitals_lo_rr',3,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','RR','EditText'),
 (25,'doctor_sp_benId','doctor_lo_benId',4,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenId','Spinner'),
 (26,'doctor_sp_rch','doctor_lo_rch',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','RCH','Spinner'),
 (27,'doctor_et_cd','doctor_lo_cd',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','CD','TextView'),
 (28,'doctor_CD_other','linearlayout_CD_Other',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','CDOther','EditText'),
 (29,'doctor_et_ncd','doctor_lo_ncd',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','NCD','TextView'),
 (30,'doctor_et_anc_pnc','doctor_lo_anc_pnc',4,2,2,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','null'),
 (31,'doctor_et_risk_factors','doctor_lo_risk_factors',4,2,2,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','RiskFactor','TextView'),
 (32,'doctor_et_accute_illness','doctor_lo_accute_illness',4,2,2,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Accute Illness','EditText'),
 (33,'doctor_et_imp_clinical_findings','doctor_lo_imp_clinical_findings',4,2,2,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Imp Clinical Findings','EditText'),
 (34,'doctor_et_NCD_other','linearlayout_NCD_Other',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','NCD Others','EditText'),
 (36,'doctor_et_minorAlignments_other','linearlayout_minor_Other',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Minor Ailments Others','Edit Text'),
 (37,'doctor_et_minorAlignments','doctor_lo_minor_ailgnments',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Minor Ailments','TextView'),
 (38,'doctor_et_remarks','doctor_lo_remarks',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Remarks','EditText'),
 (39,'doctor_sp_reffered','doctor_lo_reffered',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Reffered','Spinner'),
 (40,'doctor_et_refferedTo_other','linearlayout_referedTo_Other',4,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Reffered Others','EditText'),
 (41,'labtest_sp_benId','labtest_lo_benId',5,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenId','Spinner'),
 (42,'txt_labtest','',5,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (43,'txt_result','',5,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (44,'txt_units','',5,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (46,'md_sp_benId','md_lo_benId',6,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenId','Spinner'),
 (47,'md_et_drugCount','md_lo_drugCount',6,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (48,'md_cb_remarks','md_lo_rematks',6,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (49,'md_row_drugName','',6,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (50,'md_row_expiry_date','',6,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (51,'md_row_expiry_date','',6,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (52,'md_row_et_issue_quantity','',6,2,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','N/A','N/A'),
 (53,'reg_sp_age_type','',2,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','AgeType','Spinner'),
 (54,'search_et_ben_id','',7,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenId','EditText'),
 (58,'search_et_ben_name','',7,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenName','EditText'),
 (59,'search_et_ben_surname','',7,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','SurName','EditText'),
 (60,'search_et_ben_age','',7,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenAge','EditText'),
 (61,'search_sp_ben_ageType','',7,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenAgeType','Spinner'),
 (62,'search_sp_ben_gender','',7,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenGender','Spinner'),
 (63,'staff_reg_et_first_name','staff_reg_lo_first_name',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','FirstName','EditText'),
 (64,'staff_reg_et_last_name','staff_reg_lo_last_name',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','LastName','EditText'),
 (65,'staff_reg_et_father_name','staff_reg_lo_father_name',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','FatherName','EditText'),
 (66,'staff_reg_sp_gender','staff_reg_lo_gender',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Gender','Spinner'),
 (67,'staff_reg_et_age','staff_reg_lo_age',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Age','EditText'),
 (69,'staff_reg_sp_ageType','staff_reg_lo_age',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','AgeType','Spinner'),
 (70,'staff_reg_tv_dob','staff_reg_lo_dob',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','DOB','TextView'),
 (71,'staff_reg_tv_doj','staff_reg_lo_doj',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','DOJ','TextView'),
 (72,'staff_reg_et_present_address','staff_reg_lo_present_address',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Address','EditText'),
 (73,'staff_reg_et_phone_number','staff_reg_lo_phone_number',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','PhoneNumber','EditText'),
 (74,'staff_reg_et_email_address','staff_reg_lo_email_address',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','EmailAdress','EditText'),
 (75,'staff_reg_sp_role','staff_reg_sp_role',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Role','Spinner'),
 (76,'staff_reg_et_username','staff_reg_lo_username',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','UserName','EditText'),
 (77,'staff_reg_et_password','staff_reg_lo_password',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Password','EditText'),
 (78,'staff_reg_et_confirm_password','staff_reg_lo_confirm_password',8,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','ConfirmPassword','EditText'),
 (79,'edit_staff_reg_et_first_name','edit_staff_reg_lo_first_name',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','FirstName','EditText'),
 (80,'edit_staff_reg_et_last_name','edit_staff_reg_lo_last_name',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','LastName','EditText'),
 (81,'edit_staff_reg_et_father_name','edit_staff_reg_lo_father_name',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','FatherName','EditText'),
 (82,'edit_staff_reg_sp_gender','edit_staff_reg_lo_gender',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Gender','Spinner'),
 (83,'edit_staff_reg_et_age','edit_staff_reg_lo_age',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Age','EditText'),
 (84,'edit_staff_reg_sp_ageType','edit_staff_reg_lo_age',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','AgeType','Spinner'),
 (85,'edit_staff_reg_tv_dob','edit_staff_reg_lo_dob',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','DOB','TextView'),
 (86,'edit_staff_reg_tv_doj','edit_staff_reg_lo_doj',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','DOJ','TextView'),
 (87,'edit_staff_reg_et_present_address','edit_staff_reg_lo_present_address',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Address','EditText'),
 (88,'edit_staff_reg_et_phone_number','edit_staff_reg_lo_phone_number',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','PhoneNumber','EditText'),
 (89,'edit_staff_reg_et_email_address','edit_staff_reg_lo_email_address',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','EmailAdress','EditText'),
 (90,'edit_staff_reg_sp_role','edit_staff_reg_lo_role',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Role','Spinner'),
 (91,'edit_staff_reg_sp_usernames','edit_staff_reg_sp_usernames',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','UserName','Spinner'),
 (92,'edit_staff_reg_et_password','edit_staff_reg_lo_password',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','Password','EditText'),
 (93,'edit_staff_reg_et_confirm_password','edit_staff_reg_lo_confirm_password',9,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','ConfirmPassword','EditText'),
 (94,'staffAttendence_sp_sessionType','staffAttendence_lo_sessionType',10,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','SessionType','Spinner'),
 (95,'staffAttendence_sp_sessionperiod','staffAttendence_lo_sessionperiod',10,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','SessionPeriod','Spinner'),
 (96,'staffAttendence_sp_staffid','staffAttendence_lo_staffid',10,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','StaffId','Spinner'),
 (97,'staffAttendence_sp_staffname','staffAttendence_lo_staffname',10,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','StaffName','Spinner'),
 (98,'staffAttendence_sp_staffDesignation','staffAttendence_lo_staffDesignation',10,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','StaffDesignation','TextView'),
 (99,'cp_sp_benId','cp_lo_benId',19,1,1,'2017-08-15 00:00:00.0','2017-08-15 00:00:00.0','BenId','Spinner'),
 (100,'cp_provisonal_diagn','cp_lo_provisonal_diagn',19,1,1,'2017-08-24 00:00:00.0','2017-08-24 00:00:00.0','ProvisionalDiagnosis','EditText'),
 (101,'cp_referral','cp_lo_referral',19,1,1,'2017-08-24 00:00:00.0','2017-08-24 00:00:00.0','referral','EditText'),
 (102,'cp_referral_other','cp_referral_other_parent',19,2,1,'2017-08-24 00:00:00.0','2017-08-24 00:00:00.0','Referral Other','EditText'),
 (103,'cp_health_education','cp_lo_health_education',19,1,1,'2017-08-24 00:00:00.0','2017-08-24 00:00:00.0','HealthEducation','EditText'),
 (104,'cp_health_education_other','cp_health_education_other_parent',19,2,1,'2017-08-24 00:00:00.0','2017-08-24 00:00:00.0','HealthEducation Other','EditText'),
 (105,'cp_guidance','cp_lo_guidance',19,1,1,'2017-08-24 00:00:00.0','2017-08-24 00:00:00.0','Guidance','EditText'),
 (106,'cp_guidance_other','cp_guidance_other_parent',19,2,1,'2017-08-24 00:00:00.0','2017-08-24 00:00:00.0','Guidance Others','EditText'),
 (107,'cp_followup_cases','cp_lo_followup_cases',19,1,1,'2017-08-24 00:00:00.0','2017-08-24 00:00:00.0','FollowUp Case','EditText'),
 (108,'cp_followup_cases_other','cp_followup_cases_other_parent',19,2,1,'2017-08-24 00:00:00.0','2017-08-24 00:00:00.0','FollowUp Case Others','EditText'),
 (109,'edit_reg_tv_dateOfRegistration','edit_reg_lo_dateOfRegistration',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','DateOf Registation','TextView'),
 (110,'edit_reg_et_benficiary_name','edit_reg_lo_benficiary_name',20,1,1,'2017-09-19 00:00:00.0','2017-09-19 00:00:00.0','BenName','EditText'),
 (111,'edit_reg_et_surname','edit_reg_lo_surname',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','SurName','EditText'),
 (112,'edit_reg_sp_gender','edit_reg_lo_gender',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','Gender','Spinner'),
 (113,'edit_reg_et_age','edit_reg_lo_age',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','Age','EditText'),
 (114,'edit_reg_sp_age_type','edit_reg_lo_age',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','AgeType','Spinner'),
 (115,'edit_reg_tv_dob','edit_reg_lo_dob',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','DOB','TextView'),
 (116,'edit_reg_sp_age_group','edit_reg_lo_age_group',20,2,2,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','AgeGroup','Spinner'),
 (117,'edit_reg_et_personal_number','edit_reg_lo_personal_number',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','Personal Number','EditText'),
 (118,'edit_reg_et_family_number','edit_reg_lo_family_number',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','Family Number','Editext'),
 (119,'edit_reg_sp_caste','edit_reg_lo_caste',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','Caste','Spinner'),
 (120,'edit_reg_sp_religion','edit_reg_lo_religion',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','Religion','Spinner'),
 (121,'edit_reg_et_no_of_familyNumbers','edit_reg_lo_no_of_familyNumbers',20,1,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','Family Member','EditText'),
 (123,'edit_reg_cb_bpl','edit_reg_lo_bpl',20,2,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','BPL','CheckBox'),
 (124,'edit_reg_cb_handicaped','edit_reg_lo_handicaped',20,2,1,'2017-09-20 00:00:00.0','2017-09-20 00:00:00.0','Handicaped','CheckBox');
INSERT INTO "mu_RoleConfiguration" ("sno","roleId","pageId","isActive","insertedDate","updatedDate") VALUES (1,1,1,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (2,1,2,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (3,1,3,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (4,1,4,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (5,1,5,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (6,1,6,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (7,1,7,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (8,1,8,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (9,1,9,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (10,1,10,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (11,1,11,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (12,1,12,2,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (13,1,13,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (14,1,14,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (15,1,15,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (16,1,16,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (17,1,17,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (18,1,18,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (19,1,19,2,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (20,1,20,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (21,2,5,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (22,2,6,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (23,2,7,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (24,2,8,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (25,3,9,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (26,3,10,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (27,3,11,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (28,3,1,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (29,4,2,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (30,4,3,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (31,5,5,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (32,5,9,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (33,5,10,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (34,4,12,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (35,4,11,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (36,4,10,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (37,3,6,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (38,3,7,1,'2016-06-18 00:00:00.0','2016-06-18 00:00:00.0'),
 (39,1,21,2,'2017-12-12 12:38:12.0','2017-12-12 12:38:12.0'),
 (40,1,22,2,'2017-12-12 12:38:34.0','2017-12-12 12:38:34.0');
INSERT INTO "mv_VanDeviceApprove" ("userName","password","registrationNo","imeiNo","parkingPlace","villageId","mandalId","districtID","stateId","gcmToken","isActive","insertedDate","updatedDate") VALUES ('admin','admin','TS09ER4026','864115032543572','packing',7,11,23,1,'cayMgGgw8NM:APA91bFg8qr3trs7a7eaDpEO1gL7VlBc7fqFd9lSg3WySaMd7QeO_VAtTXaRcXoS78-kB0KvFIM2jmCSxvELFiKKFPNUUCoN8lPEUJP_SZIsFC9QQuMGVV8Hf3NPAKsVuRAFA-11591o',1,'2018-01-03 19:42:05','2018-01-03 19:42:05');
INSERT INTO "ms_Report" ("reportId","reportName","reportQuery","noOfArguments","isActive","insertedDate","updatedDate") VALUES (1,'Drug wise data','SELECT  se.itemId as DrugId,genericName as Drugname,itemTypeName,sum(quantityGiven) as Total_Quantity,villageName as servicePoint                      from dp_ItemDispensation se                       left join m_Village spm on spm.villageId=se.servicePointId                       left join mi_Item mi on mi.itemId=se.itemId                       left join mi_ItemType mit on mit.itemTypeId=se.itemTypeId where se.insertedDate between ? and ?   group by DrugId order by 2',2,1,'2017-12-12 00:00:00.0','2017-12-12 00:00:00.0'),
 (2,'BeneficiaryWiseDrugReport','select di.patientId, di.visitId,di.itemId,genericName as DrugName,quantityGiven,ms.servicePointName,di.insertedDate  from dp_ItemDispensation di

left join mi_Item mi on mi.itemId=di.itemId

left join mv_ServicePoint ms on ms.servicePointId=di.servicePointId

where di.insertedDate between ? and ?',2,1,'2017-12-12 00:00:00.0','2017-12-12 00:00:00.0'),
 (3,'BenSummaryreport','select di.patientId, di.visitId,di.itemId,genericName as DrugName,quantityGiven,ms.servicePointName,dr.registrationDate,dv.visitDate,dr.name,dr.surname,case when dr.genderId=1 then "Male" else "Female" end as GenderType,substr(dv.age||ma.ageUnitName,-10,10) as Age,height,weight,bmi,respiratoryRate from dp_ItemDispensation di left join mi_Item mi on mi.itemId=di.itemId left join dp_Visit dv on di.patientId=dv.patientId and di.visitId=dv.visitId left join dp_Registration dr on dr.patientId=dv.patientId left join dp_Vitals dpv on di.patientId=dpv.patientId and di.visitId=dpv.visitId left join mv_ServicePoint ms on ms.servicePointId=di.servicePointId left join mp_AgeUnit ma on ma.ageUnitId=dv.ageTypeId where di.insertedDate between ? AND ?',2,1,'2017-12-12 00:00:00.0','2017-12-12 00:00:00.0'),
 (4,'BenVisitReport','select v.visitId,v.patientId,sp.servicePointName,r.registrationDate,v.visitDate,r.name,r.surname,case WHEN r.genderId = 1 THEN "MALE" WHEN r.genderId = 2 THEN "FEMALE" End as GENDER,v.age,CASE WHEN v.visitDate=   r.registrationDate THEN "NEW REG" ELSE "REVISIT" END from  dp_visit v left join mv_servicepoint sp on  sp.servicePointId = v.servicePointId left join dp_registration  r  on  r.patientId = v.patientId WHERE v.visitDate BETWEEN ? and ?',2,1,'2017-12-12 00:00:00.0','2017-12-12 00:00:00.0'),
 (5,'Reg&Revisit Count','select "NEW REGISTRATIONS" AS "Count",COUNT(1) AS "COUNT NO" from dp_visit dv where  dv.visitCount = 1 and dv.visitDate between ? AND ? UNION ALL select "REVISIT" AS "Count",COUNT(1) AS "COUNT NO" from dp_visit dv where  dv.visitCount <> 1 and dv.visitDate between ? AND ? UNION ALL select "TOTAL VISITS" AS "Count",COUNT(1) AS "COUNT NO" from dp_visit dv where  dv.visitDate between ? AND ?',6,1,'2017-12-23 00:00:00.0','2017-12-23 00:00:00.0'),
 (6,'CheckUploadedCount','Select tableName,case when uploadStatus!=0 then  "Not Uploaded" else  "Uploaded" end as "uploades Type",count(*) from ds_UploadData where insertedDate between ? and ? group by tableName,uploadStatus order by tableName',2,1,'2018-01-05 00:00:00.0','2018-01-05 00:00:00.0');
INSERT INTO "mp_DiseaseCategory" ("diseaseCategoryId","diseaseCategoryName","isActive","insertedDate","updatedDate") VALUES (1,'Chronic CDs',1,'2016-06-29 00:00:00.0','2016-06-29 00:00:00.0'),
 (2,'Chronic NCDs',1,'2016-06-29 00:00:00.0','2016-06-29 00:00:00.0'),
 (3,'Minor Ailments',1,'2016-06-29 00:00:00.0','2016-06-29 00:00:00.0');
INSERT INTO "mp_BeneficiaryType" ("beneficiaryTypeId","beneficiaryTypeName","isActive","insertedDate","updatedDate") VALUES (1,'ANC',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (2,'PNC',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (3,'NEONATE',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (4,'INFANT',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0'),
 (5,'CHILD (1 - 5 YRS)',1,'2016-06-29 11:00:00.0','2016-06-29 11:00:00.0');
INSERT INTO "mp_ecg" ("ecgId","ecgName","referral","isActive","insertedDate","updatedDate") VALUES (2,'Sinus Bradycardia

','No',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (3,'Sinus Tachycardia

','No',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (4,'Atrial Fibrillation

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (5,'Atrial Flutter

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (6,'Ventricular Tachycardia

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (7,'Ventricular Fibrillation

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (8,'First Degree Heart Block

','No',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (9,'Second Degree  Heart Block Mobitz Type I

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (10,'Second Degree  Heart Block	Mobitz Type I

I','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (11,'Third Degree Heart Block

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (12,'Left Bundle Branch Block (LBBB)

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (13,'Right Bundle Branch Block (RBBB)

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (14,'Anterior Wall MI

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (15,'Anterio Lateral Wall MI

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (16,'Inferior Wall MI

','Yes',1,'2019-08-16 00:00:00.0','2019-08-16 00:00:00.0'),
 (1,'Normal Sinus Rhythm (NSR)

','No',1,'2019-08-16 15:45:00.0','2019-08-16 15:45:00.0');